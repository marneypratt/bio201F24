---
title: "Project Data Analysis Practice"
author: "Your Name Here"
date: "Nov 19, 2024"
format: 
  html:
    code-overflow: wrap
    embed-resources: true
editor_options: 
  chunk_output_type: inline
---

## Load necessary packages

Run the code below at the start of the session to make sure all the necessary packages are loaded.

It is recommended that you put all your code to load packages in one R chunk at the start. Run the chunk below by clicking the little green arrow at the top right of the code chunk.

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse, warn.conflicts = FALSE) ## for readr, dplyr, ggplot2
library(ggbeeswarm) ## for jittering points (you can remove this is you did not use a dotplot)
#library(flextable, warn.conflicts = FALSE) ## for making formatted tables that can be pasted elsewhere
library(dabestr, warn.conflicts = FALSE) ##for data analysis using Bootstrap-coupled estimation
library(rstatix, warn.conflicts = FALSE) #pipe friendly framework for basic stats
library(ggpubr, warn.conflicts = FALSE) #publication ready plots & QQ plots
library(labelled) #for labeling variables better


```

## Example Grip Force Data

The data used here are from a student project where maximum grip force was measured for 10 subjects. Half of the subjects were given caffeine to drink, and the other half were given a placebo which was not caffeinated but was otherwise the same as the caffeinated drink. The maximum grip force was measured before each subject consumed their drink, and was measured again 30 minutes after the subject consumed their drink.

Thus, the dependent variable is maximum grip force (measured in Newtons), and there are two independent variables - (1) the time the grip force was measured (Before or After) and (2) the type of drink consumed (Caffeine or Placebo).

Since there is one measurement variable (maximum grip force), and two nominal variables (time of measurement, type of drink), we can use a 2-Factor analysis to see if caffeine has a different effect on grip force than the placebo.

Because the same subject was measured twice (Before and After), we have to take that into account. There are several ways this can be done. One option is to use a random blocking factor (another name for a repeated measure), which is the example shown here.

The students who did this project predicted that caffeine would stimulate the sympathetic nervous system which could increase grip strength. Thus, they predicted a significant interaction between caffeine and the time grip was measured where the maximum grip would increase more after drinking caffeine than drinking the placebo.

We will start by importing the data file. This file (called grip.csv) has 4 columns and 20 rows of data.

The variables are:

-   `time.measured` - this is the time the grip force was measured, Before or After drinking

-   `drink.type` - this is the type of drink consumed, Caffeine or Placebo

-   `subject` - this is the subject ID number from 1-10

-   `maxGrip` - this is the maximum grip force measured in Newtons

```{r}
#| label: import data

#Import data file 
my.df <- read_csv("data/grip.csv",
                  show_col_types = FALSE)
                 
#Change independent categorical variables to factors
my.df$time.measured <- factor(my.df$time.measured, 
                             levels = c("Before", "After"))
my.df$drink.type <- factor(my.df$drink.type, 
                          levels = c("Placebo", "Caffeine"))

#add more useful labels for the columns
my.df <- my.df |> 
  labelled::set_variable_labels(
    subject           = "Subject ID",
    time.measured     = "Time of Measurement",
    drink.type        = "Drink Type",
    maxGrip           = "Maximum Grip Force (N)"
  )

#see https://www.pipinghotdata.com/posts/2022-09-13-the-case-for-variable-labels-in-r/ for more help with labeling data

```

Take a look at the dataset we just created by clicking on "my.df" in the Environment tab in the upper right RStudio window.

Note that this dataset, which we named "my.df" (for "my data frame", which is just a generic way to name a data frame making it easier to use template or example code), includes a tidy data spreadsheet. There are four columns and 20 observations in each. Each column has a column name and a more descriptive label that we added using the `set_variable_labels` function from the `labelled` package.

## Data Exploration

### Descriptive Statistics

First, let's get the full descriptive statistics by running the next code chunk.

Note that we will use the 2 factors (time.measured, drink.type) in the `group_by()` function to see the descriptive statistics for the interaction of these two factors.

```{r}
#| label: descriptive stats

# the code below will calculate descriptive statistics for a variable of interest grouped by another variable

#set the variable you want to summarize
x.var <- "maxGrip" 

df.sum <- my.df  |>  
  # remove missing values from continuous variables
  filter(!is.na(.data[[x.var]])) |> 
  
  # Group the data by your 2 factors
  group_by(drink.type, time.measured) |> 
  
  # calculate the descriptive stats
  summarize(mean = mean(.data[[x.var]]), 
            median = median(.data[[x.var]]), 
            SD = sd(.data[[x.var]]), 
            IQR = IQR(.data[[x.var]]), 
            min = min(.data[[x.var]]),
            max = max(.data[[x.var]]),
            N = n())

df.sum



```

How should we round these variables? Recall that you can use the SD as the indicator of how much average variability there is in your data. For this class, please round the SD to 2 significant digits based on recommendations in [Cole et al. (2015)](https://www-ncbi-nlm-nih-gov.libproxy.smith.edu/pmc/articles/PMC4483789/). Then round all the other values to the same decimal place as the rounded SD.

In the case above, we should round the SD to the tenths or ones place to get it rounded to 2 significant digits (there is more variation in the After measurements). Thus, we will round the values to the tenths place for the Before groups and to the ones place for the After groups.


### QQ Plots to Assess Normality

Use a QQ plot to see if each continuous variable is normally distributed. Since we only have one continuous dependent variable in this example, that is the only variable we need to assess the distribution for.

The `color` and `facet.by` functions splits the plots up by any factors you have. If you have no factors, then delete one or both of those lines and the comma from the above line.

You only need to replace the BLANKS (indicated by underscores) in the code below based on the instructions in the comments

```{r}
#| label: Dependent variable QQ plots 

#make a QQ plot for each dependent variable that is continuous
ggpubr::ggqqplot(
  data = my.df,               #put the data frame name here 
  "maxGrip",                  #put the continuous variable name here
  color = "drink.type",       #put one factor here (remove if no factors)
  facet.by = "time.measured"  #put another factor here (remove if no factors)
  )  

```

If the points are fairly close to the line, you can assume that the data have a reasonably normal distribution.

If the points do not fit close to the line at all, you can try a transformation (such as taking the logarithm) to see if that gets the points to fit closer to the line. Just note that you can't take the log of zero, so if you have any zero values, you can add one before taking the log.

Here we can see that the points fit the line reasonably well, so we can assume it is close enough to a normal distribution. Do note that the variability (shown as the shaded area in the QQ plots but also in the SD and IDR of the descriptive statistics) is much higher in the "After" values than in the "Before" values.



## Estimation Statistics

Next, we want to perform some inferential statistical tests to see if the dependent variable was impacted by the two independent variables. Since this experimental design used the same subjects, we need to take that into consideration using a repeated measures type of test.

### Compare the baseline between treatment groups

First, we will use the `dabestr` package to use estimation statistics to compare the baseline (Before) values between the two treatments (Caffeine vs Placebo) to make sure that we did a good job of random sampling. Our expectation is that there should not be a difference between the treatments for the baseline values before they experienced the treatments.

We will start by performing a [basic mean difference test for unpaired means](https://cran.r-project.org/web/packages/dabestr/vignettes/tutorial_basics.html)


```{r}
#| label: est stats compare baselines

#filter to keep just the "Before" values
my.df.before <- my.df |> 
  filter(time.measured == "Before")

#set up the comparison
compare_baselines <- load(
  my.df.before,
  x = drink.type, 
  y = maxGrip,
  idx = c("Placebo", "Caffeine")
) |> 
mean_diff()

#print the results
print(compare_baselines)

#plots the results
#for more plot options
#see https://acclab.github.io/dabestr/articles/plot_aesthetics.html 
est.baseline.plot <- 
  dabest_plot(compare_baselines,
            swarm_label = "Baseline Max Grip Force (N)")
est.baseline.plot



```


The graph on the left shows the raw dependent variable (in this case, the baseline maximum grip force) as points with the mean for each group shown as the gap and the standard deviation shown as the vertical lines. The graph on the right shows effect size as a mean difference. The shaded curve shows the 5000 bootstrapped samples - basically, it is taking a random sub-sample of your data and calculating the mean difference for each, then it repeats this 5000 times (see the [Estimation Stats background material](https://www.estimationstats.com/#/background) for their explanation) and shows all these mean differences as a distribution. The black point is the mean difference between each treatment (Placebo vs Caffeine) for the baseline values among all those 5000 resamples, and the dark vertical line error bars indicate the 95% confidence interval.

If you click on the other little window of results below the code chunk (the one on the left above), you will see the results of the actual statistical test.

As you can see from the estimation plot, the distribution of mean differences for Caffeine minus Placebo for the baseline (Before) values definitely overlaps the zero line. The mean difference is 0.38 and the lower 95% confidence interval goes well below the zero line. The p-value for the two-sided permutation t-test conducted was 1. This  indicates that there was no difference between the two treatment groups for the baseline (=Before) values. This means they did a good job of randomly assigning subjects to treatment groups.

### Compare the change in value between treatments

Next, we want to see if the value after the subjects drink their assigned drink is greater than their baseline value for the Caffeine treatment. Since the same subjects were measured before and after drinking, one way we can take the sbujects into account is to find the change in maximum grip force for each subject (After - Before), and then compare that change between treatments.

```{r}
#| label: est stats compare change in value

#first we need to change the format of the data from long to wide
#this way, we will have one row for each subject and can take a difference
#between the after and before values
my.df.wide  <- my.df |> 
  pivot_wider(
    names_from = time.measured,
    names_glue = "{time.measured}.{.value}",
    values_from = maxGrip
  )

#next, take the difference between the values for each subject
my.df.diff <- my.df.wide |> 
  mutate(change.maxGrip = After.maxGrip - Before.maxGrip)

#set up the comparison
compare_change <- load(
  my.df.diff,
  x = drink.type, 
  y = change.maxGrip,
  idx = c("Placebo", "Caffeine")
) |> 
mean_diff()

#print the results
print(compare_change)

#plots the results
#for more plot options
#see https://acclab.github.io/dabestr/articles/plot_aesthetics.html 
est.change.plot <- 
  dabest_plot(compare_change,
            swarm_label = 
              "Change in Max Grip Force (N)\n(After - Before)")
est.change.plot


```

The points in the plot represent the change in maximum grip force after drinking minus before. There was more variability in the change in maximum grip force for the caffeine group - 3 values were fairly high (increased by 50N or more), but two values were fairly low (only increased by less than 15N). The change in maximum grip force for the placebo group (who drank decaf coffee) was less variable with values between ~9-30N. Because the 95% confidence interval for the mean difference between the treatments overlaps with zero, this suggests that the regular caffeinated coffee (Caffeine group) did not significantly increase the maximum grip force relative to the decaf coffee (Placebo group) (the legacy p-value of the two-sided permutation t-test of 0.42 also suggests there was no significant difference).


### Delta-delta comparison

Alternatively to manually computing the change in maximum grip force after drinking caffeinated vs decaf coffee as we did above, we can perform a [delta-delta comparison](https://acclab.github.io/dabestr/articles/tutorial_deltadelta.html) using estimation statistical techniques (see the Paired Data example on the delta-delta tutorial page).


```{r}
#| label: est stats delta-delta


#set up the delta-delta test
paired_delta2  <- load(my.df,
  x = time.measured, 
  y = maxGrip, 
  experiment = drink.type,
  delta2 = TRUE,
  experiment_label = c("Placebo", "Caffeine"),
  x1_level = c("Before", "After"),
  paired = "baseline", 
  id_col = subject)  |> 
  mean_diff()

#prints the results of the inferential estimation statistics
print(paired_delta2)
print(paired_delta2$boot_result)

#plots the results
#for more plot options
#see https://acclab.github.io/dabestr/articles/plot_aesthetics.html 
est.delta2.plot <- 
  dabest_plot(
    paired_delta2,
    swarm_label = "Max Grip Force (N)",
    raw_marker_size = 0.5, 
    swarm_x_text = 8,
    swarm_y_text = 12)
est.delta2.plot

```

The top graph shows the raw values for maximum grip force with a line connecting the values within subjects. This graph is nice in that it really shows how all subjects had an increase in maximum grip force when measured after drinking compared to before. You can also see in the estimation plots that the after values were overall higher than the before values for both treatment groups (the 95%CI for the paired mean difference fop After Placebo minus Before Placebo and welll as the After Caffeine minus Before Caffeine does not overlap with zero for either treatment). This demonstrates why it is important to have a Placebo group. Taking a second measurement did have an effect in increasing the maximum grip force regardless of treatment. It is not clear if this was because the subjects were better hydrated after drinking something regardless of caffeine content, they learned how to grip the hand dynamometer better on the second try, they were more relaxed for the second measurement, or something else.

While the After value for maximum grip force increased the most for 3 subjects within the Caffeine group, the fact that the other 2 subjects in that group had a very small increase meant that the overall increase was not significantly higher for the Caffeine group compared to the Placebo group (as evidenced by the delta-delta plot where the lower 95%CI does overlap with zero). 

Note that the mean difference for the delta-delta plot was 22.26, and this is the same mean difference that we got in the analysis above where we manually calculated the change in maximum grip force (After - Before) and then compared between treatments.  

## Null Hypothesis Significance Testing

As we talked about in an earlier lab, the other framework that has been used for a long time to do statistical inference is called "Null Hypothesis Significance Testing" or NHST (see [Pernet 2017](https://f1000research.com/articles/4-621/v5) for an overview).

We have 2 factors and measured Before and After drinking on the same subjects. Thus, we have a within subjects factor (Time of Measurements, with Before and After levels) and a between subjects factor (Drink Type, with Placebo and Control levels). Since we are mixing within and between factors, we will complete what is someties called a 2-way mixed analysis of variance (2-way mixed ANOVA) to see if the NHST framework gives us the same answer as the estimation statistics framework.

One of the first thing to do when completing an ANOVA (or similar tests) is to test the assumptions of the model. (the code below was based on the [Two-way mixed ANOVA](https://www.datanovia.com/en/lessons/mixed-anova-in-r/#google_vignette) and [Anova Test](https://rpkgs.datanovia.com/rstatix/reference/anova_test.html) from Datanovia).

```{r}
#| label: test assumptions

#Test to see if each group has a normal distributed
#p-value should be greater than 0.05 if normal
my.df  |> 
  group_by(time.measured, drink.type)  |> 
  rstatix::shapiro_test(maxGrip)

#qq plots
#points should be fairly close to the line if normal
ggpubr::ggqqplot(my.df, "maxGrip") + 
  facet_grid(time.measured ~ drink.type)


#test for outliers
my.df  |> 
  group_by(time.measured, drink.type)  |> 
  rstatix::identify_outliers(maxGrip)

#test for homogeneity of variance
##p-value should be greater than 0.05 if variance is homogeneous
my.df |> 
  group_by(time.measured) |> 
  levene_test(maxGrip ~ drink.type)



```

The first results window to the left above, shows the results of a Shapiro-Wilks test of normality (using the `rstatix` package). The p-value for each group was greater than 0.05, which indicates they are each not significantly different from the null-hypothesis (the null here is that it is a normal distribution). This is statistics speak to say that they are close enough to a normal distribution for our purposes.

The next results window above shows a Q-Q plot (quantile-quantile plot) for each group comparing to a normal distribution in a graphical manner (see this [Complete Guide: How to Interpret Q-Q Plots](https://www.statology.org/qq-plot-interpretation/) if you want to learn more). Because the points are mostly close to the line and don't stray much outside of the grey shaded area, this indicates that the data are pretty normally distributed.

The second to last results window above shows how many rows contain outliers. In this case, there was one outlier (the value before drinking decaf coffee for subject number 6), but it was not an "extreme" outlier.

The last results window shows tests whether the variance is similar among groups. In this case, the p-values are all above 0.05, so that indicates the variance is homogeneous within each time point (Before or After). 

Since these data fit the assumptions of ANOVA well enough, we will now complete the 2-way mixed ANOVA and create a graph of the results.


```{r}
#| label: two-way mixed ANOVA

#avoids scientific notation
options(scipen = 99)

# Perform 2-way mixed ANOVA with the rstatix package
mixed_anova <- rstatix::anova_test(
    data = my.df,   #dataframe 
    dv = maxGrip,   #dependent variable
    wid = subject,  #subjects column
    between = drink.type,    #between-subjects factor variable
    within = time.measured)  #within-subjects factor variable 

# Print the results as a dataframe
mixed_anova.table <- 
  as.data.frame(get_anova_table(mixed_anova))
mixed_anova.table

#save the results as a csv file
write_csv(mixed_anova.table, "results/mixed_anova.table.csv")

# We are comparing to an F-distribution (F-test) here 
# DFn indicates the degrees of freedom in the numerator 
# DFd indicates the degrees of freedom in the denomenator 
# F is the F-statistic value
# p specifies the p-value
# ges is the generalized effect size 

```

The results above give the overall results of the 2-way mixed ANOVA test. The first two rows give the main effect results of each factor, and the last row gives the interaction effect. It is important to interpret the interaction effect first. Here, we see that the interaction effect was not significant (p=0.20). The main effect of Drink Type was also not significant (p=0.28), but the main effect of Time of Measurement did have a significant effect (p=0.003). 

Since there are only two levels within the Time of Measurement factor (Before vs After), we can already say that these are significantly different. But I have included the post-hoc tests (which just means the tests you do after the main test) that is needed to see which groups are different from each other within a main effect. See the Datanovia page on  [Mixed ANOVA in R](https://www.datanovia.com/en/lessons/mixed-anova-in-r/) for more about the post-hoc tests for the two-way example (Just note that I recommend a dot plot rather than a box plot for the results). Below is the code for a non-significant two-way interaction, where we are only comparing levels for the significant main effect of Time of Measurement.

```{r}
#| label: two-way mixed ANOVA post-hoc

# Pairwise comparisons among levels for the within subjects factor 
pwc <- my.df  |> 
  pairwise_t_test(maxGrip ~ time.measured, 
                  paired = TRUE,
                  p.adjust.method = "bonferroni")
pwc

```
Note that the p-value for this pairwise t-test comparing Before and After is the same as the p-value for the main effect of time.measured in the 2-way mixed ANOVA. This is because there are only two levels, so the overall effect is the same as the one pairwise test.

Like we did with the estimation statistics framework, it is useful to compare the baseline (in this case "Before") values between the two treatment groups (Placebo vs Caffeine) to make sure that there wasn't anything different between the two groups of subjects before they were subjected to the treatment. We will use the `rstatix` package function t_test to do an unpaired t-test to compare the Before values between the two treatment groups (see [How To Do Two-Sample T-test in R](https://www.datanovia.com/en/lessons/how-to-do-a-t-test-in-r-calculation-and-reporting/how-to-do-two-sample-t-test-in-r/)).

```{r}
#| label: unpaired t-test of baselines

#computes the unpaired t-test
baseline.ttest <- my.df  |>  
  filter(time.measured == "Before") |> 
  t_test(maxGrip ~ drink.type,
         detailed = TRUE)  |> 
  add_significance()
baseline.ttest 


#computes the effect size using Cohen's d
my.df  |>  
  filter(time.measured == "Before") |> 
  cohens_d(maxGrip ~ drink.type, var.equal = TRUE)
  
```
The p-value (0.91) is very high and the negligible effect size (Cohen's d = -0.07) indicate that the maximum grip force "Before" consuming either drink was not significantly different between the Placebo and Caffeine groups.

Lastly, we can graph the data as a dot plot with lines connecting the subjects

```{r}
#| label: two-factor plot

#create 2 factor plot 
factor2.plot <- ggplot(
  data = my.df, 
  aes(
    y = maxGrip, 
    x = time.measured,
    group = `subject`)) +
  geom_point(size = 3, shape = 21, fill = "steelblue", alpha = 0.5) +
  geom_line() + 
  
  ###this bit of code adds the horizontal bar - keep as median or change to mean
  stat_summary(fun = median, fun.min = median, fun.max = median, 
      geom = "crossbar", width = 0.3, size = 0.6,
      aes(group = 'time.measured' )) +
  
  xlab("Time of Measurement") +
  ylab("Maximum Grip Force (N)") +
  coord_cartesian(ylim = c(0, 120)) +
  theme_classic(base_size=18) +
  facet_grid(~drink.type)
factor2.plot

```


The graph shows the data points connected by lines for each subject as well as the median value for each treatment given as the thick horiztonal bar. 

Now we have the results using both frameworks of inferential statistics (estimation statistics and NHST). Here, they basically give the same results. Thus, you could pick which framework makes more sense to you - which one could you explain clearly to an audience?


## Save your graphs

To save your graph with the `ggsave()` function, you need to name the resulting file with surrounding " ", and indicate the size via height, width, and units. Don't forget to save the graph with a dpi call at 300-500 to make it nice and crisp! Look at the `ggsave()` help file for more information and options.

Note that the code below will save the graph and put it into the "results" folder 

```{r}
#| label: Save your graphs
#| eval: false

# save the graphs
# it is usually best to use .png or .jpg file types

ggsave(est.baseline.plot, filename="results/est.baseline.plot.png",  
       height = 5, width = 8, units = "in", 
       dpi = 300)

ggsave(est.change.plot, filename="results/est.change.plot.png",  
       height = 5, width = 8, units = "in", 
       dpi = 300)

ggsave(est.delta2.plot, filename="results/est.delta2.plot.png",  
       height = 5, width = 8, units = "in", 
       dpi = 300)


ggsave(factor2.plot, filename="results/factor2.plot.png",  
       height = 5, width = 8, units = "in", 
       dpi = 300)

```


